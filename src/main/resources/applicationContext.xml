<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="   
          http://www.springframework.org/schema/beans   
          http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
          http://www.springframework.org/schema/tx   
          http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
          http://www.springframework.org/schema/context   
          http://www.springframework.org/schema/context/spring-context-4.0.xsd   
          http://www.springframework.org/schema/aop   
          http://www.springframework.org/schema/aop/spring-aop-4.0.xsd" default-autowire="byName">
          
           <!-- 自动扫描组件，这里要把web下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的。-->  
    <context:component-scan base-package="com.java.spring">  
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>  
    <!-- 对serviceceng进行切面，两个注释就要用在ApplicationContext.xml里面了，注意此时不要开启aop的cglib代理模式 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>  
    
     
         <!-- 注意上面的default-autowire="byName"，如果没有这个声明那么HibernateDaoSupport中的sessionFactory不会被注入 -->  
        <!-- 约定优于配置，约定优于配置 --> 
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>  
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/aop"></property>  
        <property name="username" value="root"></property>  
        <property name="password" value="root"></property>  
    </bean>
    
     <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource"/>  
       <!-- hibenate映射的类的包 -->
       <property name="packagesToScan">
       	<list>
       		<value>com.java.spring.entity</value>
       	</list>
       </property> 
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">  
                    org.hibernate.dialect.MySQLInnoDBDialect
                </prop>  
                <prop key="hibernate.show_sql">  
                    true  
                </prop> 
                <!-- 使显示的sql格式化 -->
        		<prop key="format_sql">true</prop> 
            </props>  
        </property>  
    </bean> 
    
    
    <!-- 下面是配置声明式事务管理的，个人感觉比用注解管理事务要简单方便 -->  
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>  
    <aop:config>  
        <aop:advisor pointcut="execution(* com.java.spring.serviceImpl.*.*(..))" advice-ref="txAdvice"/>  
    </aop:config>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">  
        <tx:attributes>  
            <tx:method name="get*" read-only="true"/>  
            <tx:method name="query*" read-only="true"/>  
            <tx:method name="find*" read-only="true"/>  
            <tx:method name="load*" read-only="true"/>  
            <tx:method name="*" rollback-for="Exception"/>  
        </tx:attributes>  
    </tx:advice>     
</beans>